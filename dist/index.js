!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.cosDesign=t():e.cosDesign=t()}(self,(()=>(()=>{var e,t,r,n={451:(e,t,r)=>{"use strict";r.r(t),r.d(t,{ALL_SUPPORTED_CHAIN_IDS:()=>v,CHAIN_IDS_TO_NAMES:()=>m,CHAIN_INFO:()=>y,SupportedChainId:()=>d,default:()=>E,getAddChainParameters:()=>w});var n=r(294),o=r(310),i=r(469);r(164);var a=["success","error","warning","info"],s=["Request Success!","Request failed, Please check the network or try again!"];var l={100:"Aggregator: only borrower or access ccount or admin",101:"Aggregator: only factory",102:"Aggregator: only borrower",103:"Aggregator: only access account",104:"Aggregator: only admin",501:"Aggregator: the share is too large or too small",502:"Aggregator: the rasing is over",503:"Aggregator: assets and amounts length mismatch",504:"Aggregator: the amount exceeds the maximum limit",505:"Aggregator: the raising is successful or not over yet",506:"Aggregator: caller did not deposit assets or not borrower",507:"Aggregator: the raising is failed or not over yet",508:"Aggregator: invalid erc721 address",509:"Aggregator: borrow period is finished",510:"Aggregator: the aggregator is over",511:"Aggregator: not distribution time",512:"Aggregator: invalid caller",513:"Aggregator: the borrow period is not over",514:"Aggregator: invalid token",515:"Aggregator: invalid spender",516:"Aggregator: protocol rate values should be inside the bounds",517:"Aggregator: the amount value should be in the required range",518:"Aggregator: the amount value should be in the required range",519:"Aggregator: the raising period is not over",520:"Aggregator: borrower can not be lender"};function c(){"#/"!==window.location.hash&&(alert("please connect first"),window.location.hash="")}var u,d,f=function(e){return"0x".concat(e.toString(16))},g=function(e){var t,r,n,o,c,u,d,f=JSON.parse(JSON.stringify(e));u=[1,1],d=function(e){var t,r=e.split(":");if(r.length>1){var n=r[1].trim();return null!==(t=l[n])&&void 0!==t?t:e}return e}(null!==(c=null!==(o=null!==(n=null!==(t=f.reason)&&void 0!==t?t:null===(r=f.data)||void 0===r?void 0:r.message)&&void 0!==n?n:f.message)&&void 0!==o?o:f.code)&&void 0!==c?c:f),void 0===u&&(u=[0,0]),void 0===d&&(d=""),i.Z.open({type:a[u[0]],message:s[u[1]],className:"customNotifi",description:d,placement:"topLeft"})};!function(e){e[e.MAINNET=1]="MAINNET",e[e.ROPSTEN=3]="ROPSTEN",e[e.RINKEBY=4]="RINKEBY",e[e.GOERLI=5]="GOERLI",e[e.KOVAN=42]="KOVAN",e[e.ARBITRUM_ONE=42161]="ARBITRUM_ONE",e[e.ARBITRUM_RINKEBY=421611]="ARBITRUM_RINKEBY",e[e.OPTIMISM=10]="OPTIMISM",e[e.OPTIMISTIC_KOVAN=69]="OPTIMISTIC_KOVAN",e[e.POLYGON=137]="POLYGON",e[e.POLYGON_MUMBAI=80001]="POLYGON_MUMBAI"}(d||(d={}));var h,p,m=((u={})[d.MAINNET]="mainnet",u[d.ROPSTEN]="ropsten",u[d.RINKEBY]="rinkeby",u[d.GOERLI]="goerli",u[d.KOVAN]="kovan",u[d.POLYGON]="polygon",u[d.POLYGON_MUMBAI]="polygon_mumbai",u[d.ARBITRUM_ONE]="arbitrum",u[d.ARBITRUM_RINKEBY]="arbitrum_rinkeby",u[d.OPTIMISM]="optimism",u[d.OPTIMISTIC_KOVAN]="optimistic_kovan",u),v=Object.values(d).filter((function(e){return"number"==typeof e})),b="023190592fbf472fade57c802b61c7b3",y=((h={})[d.MAINNET]={docs:"https://docs.uniswap.org/",explorer:"https://etherscan.io/",infoLink:"https://info.uniswap.org/#/",label:"Ethereum",nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},urls:["https://mainnet.infura.io/v3/".concat(b),"https://eth-mainnet.alchemyapi.io/v2/".concat("_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC"),"https://cloudflare-eth.com"].filter((function(e){return void 0!==e}))},h[d.RINKEBY]={docs:"https://docs.uniswap.org/",explorer:"https://rinkeby.etherscan.io/",infoLink:"https://info.uniswap.org/#/",label:"Rinkeby",nativeCurrency:{name:"Rinkeby Ether",symbol:"rETH",decimals:18},urls:["https://rinkeby.infura.io/v3/".concat(b)].filter((function(e){return void 0!==e}))},h[d.ROPSTEN]={docs:"https://docs.uniswap.org/",explorer:"https://ropsten.etherscan.io/",infoLink:"https://info.uniswap.org/#/",label:"Ropsten",nativeCurrency:{name:"Ropsten Ether",symbol:"ropETH",decimals:18},urls:["https://ropsten.infura.io/v3/".concat(b)].filter((function(e){return void 0!==e}))},h[d.KOVAN]={docs:"https://docs.uniswap.org/",explorer:"https://kovan.etherscan.io/",infoLink:"https://info.uniswap.org/#/",label:"Kovan",nativeCurrency:{name:"Kovan Ether",symbol:"kovETH",decimals:18},urls:["https://kovan.infura.io/v3/".concat(b)].filter((function(e){return void 0!==e}))},h[d.GOERLI]={docs:"https://docs.uniswap.org/",explorer:"https://goerli.etherscan.io/",infoLink:"https://info.uniswap.org/#/",label:"Görli",nativeCurrency:{name:"Görli Ether",symbol:"görETH",decimals:18},urls:["https://goerli.infura.io/v3/".concat(b)].filter((function(e){return void 0!==e}))},h[d.POLYGON]={bridge:"https://wallet.polygon.technology/bridge",docs:"https://polygon.io/",explorer:"https://polygonscan.com/",infoLink:"https://info.uniswap.org/#/polygon/",label:"Polygon",nativeCurrency:{name:"Polygon Matic",symbol:"MATIC",decimals:18},urls:["https://polygon-mainnet.infura.io/v3/".concat(b),"https://polygon-rpc.com"].filter((function(e){return void 0!==e})),blockExplorerUrls:["https://polygonscan.com"]},h[d.POLYGON_MUMBAI]={bridge:"https://wallet.polygon.technology/bridge",docs:"https://polygon.io/",explorer:"https://mumbai.polygonscan.com/",infoLink:"https://info.uniswap.org/#/polygon/",label:"Polygon Mumbai",nativeCurrency:{name:"Polygon Mumbai Matic",symbol:"mMATIC",decimals:18},urls:["https://polygon-mumbai.infura.io/v3/".concat(b)].filter((function(e){return void 0!==e})),blockExplorerUrls:["https://mumbai.polygonscan.com"]},h),w=function(e){var t=y[e];return function(e){return!!e.nativeCurrency}(t)?{chainId:f(e),chainName:t.label,nativeCurrency:t.nativeCurrency,rpcUrls:t.urls,blockExplorerUrls:t.blockExplorerUrls}:e},O=function(e,t,r,n){return new(r||(r=Promise))((function(o,i){function a(e){try{l(n.next(e))}catch(e){i(e)}}function s(e){try{l(n.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?o(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(a,s)}l((n=n.apply(e,t||[])).next())}))},A=function(e,t){var r,n,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(i){return function(s){return function(i){if(r)throw new TypeError("Generator is already executing.");for(;a;)try{if(r=1,n&&(o=2&i[0]?n.return:i[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,i[1])).done)return o;switch(n=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,n=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],n=0}finally{r=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,s])}}},I=(void 0!==window.ethereum?p=new o.Q(window.ethereum,"any"):(p=null,"h5"===process.env.platform?alert("Connect failed: Please install wallet first or please refresh the browser page"):alert("Connect failed: Please install wallet first.")),p),N=window.ethereum;const E=function(e){var t=this,r=e.supportedChainIds,o=(0,n.useState)(""),i=o[0],a=o[1],s=(0,n.useRef)(""),l=(0,n.useState)(!1),u=l[0],d=l[1],h=(0,n.useCallback)((function(){d(!0),a(""),c()}),[a]),p=(0,n.useCallback)((function(e){return O(t,void 0,void 0,(function(){var t,r;return A(this,(function(n){switch(n.label){case 0:return t=!0,[4,N._metamask.isUnlocked().then((function(e){t=e}))];case 1:if(n.sent(),t||alert("MetaMask is locked"),0===(null==e?void 0:e.length))a(""),window.localStorage.setItem("userAddress",""),c();else{if(a(e[0]),r=window.localStorage.getItem("userAddress"),!e[0])return[2];r?r!==e[0]&&(window.localStorage.setItem("userAddress",e[0]),a(e[0]),window.location.reload()):(window.localStorage.setItem("userAddress",e[0]),a(e[0]))}return[2]}}))}))}),[a]),m=(0,n.useCallback)((function(){return I?i?void 0:s.current?void(I?null==I||I.send("eth_requestAccounts",[]).then(p).catch((function(e){g(e)})):g("Connect failed: Please install wallet first.")):alert("please connect first or this chain hasn't been supported yet."):alert("please connect first")}),[p,i]),v=(0,n.useCallback)((function(e){r.includes(e)?(s.current=e,m()):(alert("This chain hasn't been supported yet."),s.current="",h())}),[h,m]),b=(0,n.useCallback)((function(e){return O(t,void 0,void 0,(function(){var t;return A(this,(function(r){switch(r.label){case 0:t=f(e),r.label=1;case 1:return r.trys.push([1,3,,8]),[4,N.request({method:"wallet_switchEthereumChain",params:[{chainId:t}]})];case 2:return r.sent(),[3,8];case 3:if(4902!==r.sent().code)return[3,7];r.label=4;case 4:return r.trys.push([4,6,,7]),[4,N.request({method:"wallet_addEthereumChain",params:[w(e)]})];case 5:case 6:return r.sent(),[3,7];case 7:return[3,8];case 8:return[2]}}))}))}),[]),y=(0,n.useCallback)((function(){I?I.getNetwork().then((function(e){var t=e.chainId,r=f(t);v(r)})).catch((function(e){g(e)})):g("Connect failed: Please install wallet first.")}),[v]);return(0,n.useEffect)((function(){I&&!u&&y()}),[u,y]),(0,n.useEffect)((function(){return void 0!==window.ethereum&&(window.ethereum.on("accountsChanged",p),window.ethereum.on("chainChanged",v)),function(){void 0!==window.ethereum&&(window.ethereum.removeListener("accountsChanged",p),window.ethereum.removeListener("chainChanged",v))}}),[p,v]),{address:i,setAddress:a,getAccount:m,logOut:h,handleSwitchChain:b}}},601:()=>{}},o={};function i(e){var t=o[e];if(void 0!==t)return t.exports;var r=o[e]={id:e,loaded:!1,exports:{}};return n[e].call(r.exports,r,r.exports,i),r.loaded=!0,r.exports}i.m=n,i.amdO={},e=[],i.O=(t,r,n,o)=>{if(!r){var a=1/0;for(u=0;u<e.length;u++){for(var[r,n,o]=e[u],s=!0,l=0;l<r.length;l++)(!1&o||a>=o)&&Object.keys(i.O).every((e=>i.O[e](r[l])))?r.splice(l--,1):(s=!1,o<a&&(a=o));if(s){e.splice(u--,1);var c=n();void 0!==c&&(t=c)}}return t}o=o||0;for(var u=e.length;u>0&&e[u-1][2]>o;u--)e[u]=e[u-1];e[u]=[r,n,o]},i.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return i.d(t,{a:t}),t},r=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,i.t=function(e,n){if(1&n&&(e=this(e)),8&n)return e;if("object"==typeof e&&e){if(4&n&&e.__esModule)return e;if(16&n&&"function"==typeof e.then)return e}var o=Object.create(null);i.r(o);var a={};t=t||[null,r({}),r([]),r(r)];for(var s=2&n&&e;"object"==typeof s&&!~t.indexOf(s);s=r(s))Object.getOwnPropertyNames(s).forEach((t=>a[t]=()=>e[t]));return a.default=()=>e,i.d(o,a),o},i.d=(e,t)=>{for(var r in t)i.o(t,r)&&!i.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},i.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),i.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{var e={826:0};i.O.j=t=>0===e[t];var t=(t,r)=>{var n,o,[a,s,l]=r,c=0;if(a.some((t=>0!==e[t]))){for(n in s)i.o(s,n)&&(i.m[n]=s[n]);if(l)var u=l(i)}for(t&&t(r);c<a.length;c++)o=a[c],i.o(e,o)&&e[o]&&e[o][0](),e[o]=0;return i.O(u)},r=self.webpackChunkcosDesign=self.webpackChunkcosDesign||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))})();var a=i.O(void 0,[284],(()=>i(451)));return i.O(a)})()));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,